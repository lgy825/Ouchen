<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yunmu.core.dao.sys.SysUserMapperExt">
  <resultMap id="BaseResultMap" type="com.yunmu.core.model.sys.SysUserExt">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="login_name" jdbcType="VARCHAR" property="loginName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="user_tel" jdbcType="VARCHAR" property="userTel" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_email" jdbcType="VARCHAR" property="userEmail" />
    <result column="user_type" jdbcType="INTEGER" property="userType" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="del_flag" jdbcType="INTEGER" property="delFlag" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="choose_project_id" jdbcType="INTEGER" property="chooseProjectId" />
    <result column="company_code" jdbcType="VARCHAR" property="companyCode" />
  </resultMap>

  <resultMap id="RoleResultMap" type="com.yunmu.core.model.sys.SysRole">
    <id column="id" property="id" jdbcType="VARCHAR"/>
    <result column="role_name" property="roleName" jdbcType="VARCHAR"/>
    <result column="role_en_name" property="roleEnName" jdbcType="VARCHAR"/>
    <result column="role_type" property="roleType" jdbcType="INTEGER"/>
    <result column="role_desc" property="roleDesc" jdbcType="VARCHAR"/>
    <result column="create_by" property="createBy" jdbcType="VARCHAR"/>
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
    <result column="update_by" property="updateBy" jdbcType="VARCHAR"/>
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    <result column="del_flag" property="delFlag" jdbcType="INTEGER"/>
    <result column="company_code" property="companyCode" jdbcType="VARCHAR"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, login_name, password, user_tel, user_name, user_email, user_type, create_time,
    update_time, create_by, update_by, del_flag, status, choose_project_id, company_code
  </sql>

  <select id="getSysUserPage" parameterType="java.util.Map" resultMap="BaseResultMap">
    SELECT
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from yunmu_sys_user where del_flag=0
    <if test="loginName != null and loginName != ''">
      AND login_name LIKE '%${loginName}%'
    </if>
    ORDER BY create_time DESC
  </select>

  <insert id="insertBatchUserCinema">
    insert into yunmu_sys_user_project (user_id, project_id)
    values
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.userId,jdbcType=VARCHAR}, #{item.projectId,jdbcType=VARCHAR})
    </foreach>
  </insert>

  <insert id="insertBatchUserRole">
    insert into yunmu_sys_user_role (user_id, role_id)
    values
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.userId,jdbcType=VARCHAR}, #{item.roleId,jdbcType=VARCHAR})
    </foreach>
  </insert>

  <select id="getMenusByUserId" parameterType="String" resultMap="com.yunmu.core.dao.sys.SysMenuMapper.BaseResultMap">
        SELECT
            DISTINCT sm.*
        FROM
            yunmu_sys_menu sm
            INNER JOIN yunmu_sys_role_menu srm on sm.id = srm.menu_id
            INNER JOIN yunmu_sys_role sro on srm.role_id = sro.id
            INNER JOIN yunmu_sys_user_role sur ON sro.id = sur.role_id
        WHERE
            sm.del_flag = 0 and
            sro.status = 1 and
            sur.user_id = #{id}
        ORDER BY sm.menu_sort ASC
    </select>

  <select id="getRolesByUserId" parameterType="String" resultMap="RoleResultMap">
        SELECT
            sr.*
        FROM
            yunmu_sys_role sr
            INNER JOIN yunmu_sys_user_role sur ON sr.id = sur.role_id
        WHERE
            sr.status = 1 and
            sr.del_flag = 0 and
            sur.user_id = #{id}
    </select>
</mapper>